# OpenAPI version identifier - required for OpenAPI 3.0 domains
openapi: 3.0.0

#######################
# Optional info section
#######################
info:
  title: HANIoT Components
  description: Common components for all HANIoT APIs.
  version: '1.0.0'

components:
  schemas:
    
    #####################################################################
    ############### HANIot Account Service Schemas ######################
    #####################################################################
    
    Admin:
      type: object
      required:
      - id
      - email
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          description: Automatically generated key field.
          example: '5c86d00c7a8618923481b48b'
        email:
          type: string
          description: Email of admin for authentication.
          example: admin@haniot.com
    HealthProfessional:
      type: object
      required:
      - id
      - email
      - name
      - health_area
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          description: Automatically generated key field.
          example: '5c86d00cfc25e7036d51d652'
        name:
          type: string
          description: Name of the health professional.
          example: Isabelle Cordeiro
        email:
          type: string
          description: Email of health professional for authentication.
          example: isa@haniot.com
        health_area:
          type: string
          description: Area of medical performance of the health professional. Could be nutrition or dentistry.
          enum: ["nutrition", "dentistry"]
          example: nutrition
    PilotStudy:
      type: object
      required:
      - id
      - name
      - is_active
      - start
      - end
      - health_professionals_id
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          description: Automatically generated key field.
          example: '5c86d00c2239a48ea20a0134'
        name:
          type: string
          description: Name of pilot study.
          example: 'Pilot Odonto 01'
        is_active:
          type: boolean
          description: Status of pilot study. The value is true if it is active, false otherwise.
          example: true
        start:
          type: string
          description: Start of pilot study in UTC format, according to ISO 8601.
          example: '2018-11-19T14:40:00'
        end:
          type: string
          description: End of pilot study in UTC format, according to ISO 8601.
          example: '2019-01-23T18:00:00'
        health_professionals_id:
          type: array
          description: List of id of the health professionals who are participating in the pilot study.
          items:
            type: string
          example:
          - '5c86d00cfc25e7036d51d652'
        location: 
          type: string
          description: Address of the place where the pilot study was done.
          example: 'Av. Juvencio Arruda, SN - UEPB'

    #####################################################################
    ################# HANIot EHR Service Schemas ########################
    #####################################################################
    
    Patient:
      type: object
      required:
      - id
      - name
      - gender
      - birth_date
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Automatically generated key field. 
          example: '5c9137f2b8d3921ff3028378'
        name:
          type: string
          description: Name of patient.
          example: Elvis Aaron
        email:
          type: string
          description: Email address of patient.
          example: elvis@mail.com
        gender: 
          type: string
          description: Gender of patient.
          enum: ['male', 'female']
        birth_date:
          type: string
          description: Date of patient birth, according to ISO format.
          example: '2008-01-08'
        pilotstudy_id:
          type: string
          format: uuid
          description: Id of pilot study that patient is associated.
          example: '5c86d00c2239a48ea20a0134'
    SleepHabit:
      type: object
      required:
      - id
      - created_at
      - week_day_sleep
      - week_day_wake_up
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Automatically generated key field. 
          example: '5c9137f2f6d3dba533e4cb36'
        created_at:
          readOnly: true
          type: string
          description: Date of feeding habits record register in UTC format, according to ISO 8601.
          example: '2018-11-19T14:40:00'  
        week_day_sleep:
          type: number
          description: Approximate time the patient sleeps every day of the week.
          example: 22
        week_day_wake_up: 
          type: number
          description: Approximate time the patient wake up every day of the week.
          example: 8
    PhysicalActivityHabits:
      type: object
      required:
      - id
      - created_at
      - school_activity_freq
      - weekly_activities
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Automatically generated key field. 
          example: '5c9137f2cdff19618c05cf31'
        created_at:
          readOnly: true
          type: string
          description: Date of feeding habits record register in UTC format, according to ISO 8601.
          example: '2018-11-19T14:40:00' 
        school_activity_freq:
          type: string
          description: School activity frequency from patient.
          enum: ['one_per_week', 'two_per_week','three_per_week', 'four_more_per_week', 'none']
          example: 'four_more_per_week'
        weekly_activities:
          type: array
          description: List of physical activities practiced by the patient.
          items:
            type: string
          example:
          - run
          - swim
    FeedingHabitsRecord:
      type: object
      required:
      - id
      - created_at
      - weekly_feeding_habits
      - daily_water_glasses
      - six_month_breast_feeding
      - food_allergy_intolerance
      - breakfast_daily_frequency
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Automatically generated key field. 
          example: '5c9137f233b9b49d1c881189'
        created_at:
          readOnly: true
          type: string
          description: Date of feeding habits record register in UTC format, according to ISO 8601.
          example: '2018-11-19T14:40:00'
        weekly_feeding_habits:
          type: array
          description: List of weekly foods and consumption frequency from patient.
          items:
            $ref: '#/components/schemas/WeeklyFoodRecord'
          example:
            - food: fish_chicken_meat
              seven_days_freq: one_two_days
            - food: soda
              seven_days_freq: one_two_days
            - food: salad_vegetable
              seven_days_freq: three_four_days
            - food: fried_salt_food
              seven_days_freq: one_two_days
            - food: milk
              seven_days_freq: three_four_days
            - food: bean
              seven_days_freq: all_days
            - food: fruits
              seven_days_freq: all_days
            - food: candy_suggar_cookie
              seven_days_freq: one_two_days
            - food: burger_sausage
              seven_days_freq: one_two_days
        daily_water_glasses:
          type: string
          description: Quantity of daily water glass consumption from patient. 
          enum: ['none', 'one_two', 'three_four', 'five_more', 'undefined']
          example: 'five_more'
        six_month_breast_feeding:
          type: string
          description: Breastfeeding level from patient in your first six months of life.
          enum: ['exclusive', 'complementary' ,'infant_formulas', 'other', 'undefined']
          example: 'complementary'
        food_allergy_intolerance:
          type: array
          description: Food allergy intolerance from patient.
          items:
            type: string
            enum: ['gluten', 'aplv', 'lactose', 'dye', 'egg', 'peanut', 'other', 'undefined' ]
          example:
          - gluten
          - other
        breakfast_daily_frequency:
          type: string
          description: Breakfast daily frequency from patient.
          enum: ['never', 'sometimes', 'almost_everyday', 'everyday', 'undefined']
          example: 'everyday'
    WeeklyFoodRecord:
      type: object
      required:
      - food
      - seven_days_freq
      properties:
        food:
          type: string
          description: Name of food.
          enum: ['fish_chicken_meat', 'soda', 'salad_vegetable', 'fried_salt_food', 'milk', 'bean','fruits','candy_suggar_cookie','burger_sausage']
          example: 'fish_chicken_meat'
        seven_days_freq:
          type: string
          description: Weekly frequency of food consumption.
          enum: ['never', 'no_day', 'one_two_days', 'three_four_days', 'five_six_days', 'all_days', 'undefined']
          example: 'never'
    MedicalRecord:
      type: object
      required:
      - id
      - created_at
      - chronic_diseases
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Automatically generated key field. 
          example: '5c9137f29293b51a067711c8'
        created_at:
          readOnly: true
          type: string
          description: Date of medical record register in UTC format, according to ISO 8601.
          example: '2018-11-19T14:40:00'
        chronic_diseases:
          type: array
          description: List of chronic diseases from patient.
          items:
            $ref: '#/components/schemas/ChronicDisease'
    ChronicDisease:
      type: object
      required:
      - type
      - disease_history
      properties:
        type:
          type: string
          description: Type of chronic disease from Patient.
          enum: ['hypertension', 'blood_fat', 'diabetes']
        disease_history:
          type: string
          description: Disease history from Patient.
          enum: ['yes', 'no', 'undefined']
    SociodemographicRecord:
      type: object
      required:
      - id
      - created_at
      - color_race
      - mother_scholarity
      - people_in_home
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Automatically generated key field. 
          example: '5cbddb07bd6cdd88c4735d99'
        created_at:
          readOnly: true
          type: string
          description: Date of Sociodemographic record register in UTC format, according to ISO 8601.
          example: '2018-11-19T14:40:00'  
        color_race:
          type: string
          description: Color race from patient.
          enum: ['white', 'black', 'parda', 'yellow']
        mother_scholarity:
          type: string
          description: Level of scholarity of patient mother.
          enum: ['unlettered_elementary_one_incomplete', 'elementary_one_elementary_two_incomplete', 'elementary_two_high_school_incomplete', 'medium_graduation_incomplete', 'graduation_complete']
        people_in_home:
          type: number
          description: Quantity of people who lives with patient.
          example: 4
    FamilyCohesionRecord:
      type: object
      required: 
      - id
      - created_at
      - family_mutual_aid_freq
      - friendship_approval_freq
      - family_only_task_freq
      - family_only_preference_freq
      - free_time_together_freq
      - family_proximity_perception_freq
      - all_family_tasks_freq
      - family_tasks_opportunity_freq
      - family_decision_support_freq
      - family_union_relevance_freq
      - family_cohesion_result
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Automatically generated key field. 
          example: '5cbddb0701343856ceb30b16'
        created_at:
          readOnly: true
          type: string
          description: Date of family cohesion record register in UTC format, according to ISO 8601.
          example: '2018-11-19T14:40:00'  
        family_mutual_aid_freq:
          type: string
          description: Frequency of family mutual aid from patient.
          enum: ['almost_never', 'rarely', 'sometimes', 'often', 'almost_aways']
        friendship_approval_freq:
          type: string
          description: Frequency of friendship approval from patient.
          enum: ['almost_never', 'rarely', 'sometimes', 'often', 'almost_aways']
        family_only_task_freq:
          type: string
          description: Frequency of family only task from patient.
          enum: ['almost_never', 'rarely', 'sometimes', 'often', 'almost_aways']
        family_only_preference_freq:
          type: string
          description: Frequency of family only preference from patient.
          enum: ['almost_never', 'rarely', 'sometimes', 'often', 'almost_aways']
        free_time_together_freq:
          type: string
          description: Frequency of patient free time together with family.
          enum: ['almost_never', 'rarely', 'sometimes', 'often', 'almost_aways']
        family_proximity_perception_freq:
          type: string
          description: Frequency of family proximity perception from patient.
          enum: ['almost_never', 'rarely', 'sometimes', 'often', 'almost_aways']
        all_family_tasks_freq:
          type: string
          description: Frequency of all family tasks from patient.
          enum: ['almost_never', 'rarely', 'sometimes', 'often', 'almost_aways']
        family_tasks_opportunity_freq:
          type: string
          description: Frequency of family tasks opportunity from patient.
          enum: ['almost_never', 'rarely', 'sometimes', 'often', 'almost_aways']
        family_decision_support_freq:
          type: string
          description: Frequency of family decision support from patient.
          enum: ['almost_never', 'rarely', 'sometimes', 'often', 'almost_aways']
        family_union_relevance_freq:
          type: string
          description: Frequency of family union relevance from patient.
          enum: ['almost_never', 'rarely', 'sometimes', 'often', 'almost_aways']
        family_cohesion_result:
          type: number
          description: Frequency sum of family cohesion result from patient.
          example: 45
    OralHealthRecord:
      type: object
      required:
      - id
      - created_at
      - teeth_brushing_freq
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: 5cbddb07650a2d92a750a9bb generated key field. 
          example: '5cbddb07bd6cdd88c4735d99'
        created_at:
          readOnly: true
          type: string
          description: Date of oral health record register in UTC format, according to ISO 8601.
          example: '2018-11-19T14:40:00'  
        teeth_brushing_freq:
          type: string
          description: Frequency from patient teeth brushing per day.
          enum: ['none', 'once', 'twice', 'three_more']
        teeth_lesions:
          type: array
          description: List of teeth lesions from patient.
          items:
            $ref: '#/components/schemas/ToothLesion'
          example:
          - tooth_type: deciduous_tooth
            lesion_type: white_spot_lesion 
          - tooth_type: deciduous_tooth
            lesion_type: cavitated_lesion 
    ToothLesion:
      type: object
      required:
      - tooth_type
      - lesion_type
      properties: 
        tooth_type:
          type: string
          description: Type of tooth.
          enum: ['deciduous_tooth', 'permanent_tooth']
        lesion_type:
          type: string
          description: Type of lesion in tooth.
          enum: ['white_spot_lesion', 'cavitated_lesion']
   
    #####################################################################
    ############### HANIot M-Health Service Schemas #####################
    #####################################################################
    
    BloodGlucose:
      type: object
      required:
      - id
      - value
      - unit
      - meal
      - type 
      - timestamp
      - user_id
      properties:
        id:
          type: string
          format: uuid
          description: Automatically generated key field.
          example: '5cb488278cf5f9e6760c14ed'
          readOnly: true
        value:
          type: number
          description: Value of glycemia measurement.
          example: 146
        unit:
          type: string
          description: Unit of glycemia measurement, according with the International System of Units (SI).
          example: 'mg/dl'
        meal:
          type: string
          description: Period of collection of glycemia.
          enum: ['preprandial', 'postprandial', 'fasting', 'casual', 'bedtime']
        type: 
          type: string
          description: Type of measurement.
          example: blood_glucose
        timestamp:
          type: string
          description: Timestamp from glycemia measurement in UTC format, according to ISO 8601.
          example: '2018-11-19T14:40:00Z'
        user_id:
          type: string
          format: uuid
          description: Id of user associated with the glycemia measurement.
          example: '5a62be07d6f33400146c9b61'
          readOnly: true
        device_id:
          type: string
          format: uuid
          description: Id of device responsible for capturing the glycemia measurement.
          example: '5ca790f77aefffa37a17b605'
    BloodPressure:
      type: object
      required:
      - id
      - systolic
      - diastolic
      - unit
      - type 
      - timestamp
      - user_id
      properties:
        id:
          type: string
          format: uuid
          description: Automatically generated key field.
          example: '5cb48827217ee2910ea11e84'
          readOnly: true
        systolic:
          type: number
          description: Value of systolic blood pressure measurement.
          example: 121
        diastolic:
          type: number
          description: Value of diastolic blood pressure measurement.
          example: 78
        pulse:
          type: number
          description: Pulse per minute measurement from blood pressure. The unit of this value is bpm.
          example: 80
        unit:
          type: string
          description: Unit of blood pressure measurement, according with the International System of Units (SI).
          example: 'mmHg'
        type: 
          type: string
          description: Type of measurement.
          example: blood_pressure
        timestamp:
          type: string
          description: Timestamp from blood pressure measurement in UTC format, according to ISO 8601.
          example: '2018-11-19T14:40:00Z'
        user_id:
          type: string
          format: uuid
          description: Id of user associated with the blood pressure measurement.
          example: '5a62be07d6f33400146c9b61'
          readOnly: true
        device_id:
          type: string
          format: uuid
          description: Id of device responsible for capturing the blood pressure measurement.
          example: '5ca790f77aefffa37a17b605'
    BodyTemperature:
      type: object
      required:
      - id
      - value
      - unit
      - type 
      - timestamp
      - user_id
      properties:
        id:
          type: string
          format: uuid
          description: Automatically generated key field.
          example: '5cb4b2fd02eb7733b03db810'
          readOnly: true
        value:
          type: number
          description: Value of body temperature measurement.
          example: 36
        unit:
          type: string
          description: Unit of body temperature measurement, according with the International System of Units (SI).
          example: '°C'
        type: 
          type: string
          description: Type of measurement.
          example: body_temperature
        timestamp:
          type: string
          description: Timestamp from body temperature measurement in UTC format, according to ISO 8601.
          example: '2018-11-19T14:40:00Z'
        user_id:
          type: string
          format: uuid
          description: Id of user associated with the body temperature measurement.
          example: '5a62be07d6f33400146c9b61'
          readOnly: true
        device_id:
          type: string
          format: uuid
          description: Id of device responsible for capturing the body temperature measurement.
          example: '5ca790f77aefffa37a17b605'
    Fat:
      type: object
      required:
      - id
      - value
      - unit
      - type 
      - timestamp
      - user_id
      properties:
        id:
          type: string
          format: uuid
          description: Automatically generated key field.
          example: '5cb4882751b5f21ba364ba6f'
          readOnly: true
        value:
          type: number
          description: Value of body fat measurement.
          example: 20
        unit:
          type: string
          description: Unit of body fat measurement, according with the International System of Units (SI).
          example: '%'
        type: 
          type: string
          description: Type of measurement.
          example: fat
        timestamp:
          type: string
          description: Timestamp from body fat measurement in UTC format, according to ISO 8601.
          example: '2018-11-17T14:40:00Z'
        user_id:
          type: string
          format: uuid
          description: Id of user associated with the body fat measurement.
          example: '5a62be07d6f33400146c9b61'
          readOnly: true
        device_id:
          type: string
          format: uuid
          description: Id of device responsible for capturing the body fat measurement.
          example: '5ca790f77aefffa37a17b605'
    HeartRate:
      type: object
      required:
      - id
      - dataset
      - unit
      - type 
      - user_id
      properties:
        id:
          type: string
          format: uuid
          description: Automatically generated key field.
          example: '5cb488277b26234cfe2635da'
          readOnly: true
        dataset:
          type: array
          description: List of heart rate collection over a period of time.
          items:
            type: object
            properties:
              value: 
                type: number
                description: Value of heart rate measurement.
              timestamp:
                type: string
                description: Timestamp from heart rate measurement in UTC format, according to ISO 8601.
          example:
          - value: 90
            timestamp: '2018-11-19T14:40:00Z'
          - value: 87
            timestamp: '2018-11-19T14:41:00Z'
          - value: 89
            timestamp: '2018-11-19T14:42:00Z'
          - value: 90
            timestamp: '2018-11-19T14:43:00Z'
          - value: 91
            timestamp: '2018-11-19T14:44:00Z'
        unit:
          type: string
          description: Unit of heart rate measurement, according with the International System of Units (SI).
          example: 'bpm'
        type: 
          type: string
          description: Type of measurement.
          example: heart_rate
        user_id:
          type: string
          format: uuid
          description: Id of user associated with the heart rate measurement.
          example: '5a62be07d6f33400146c9b61'
          readOnly: true
        device_id:
          type: string
          format: uuid
          description: Id of device responsible for capturing the heart rate measurement.
          example: '5ca790f77aefffa37a17b605'
    Height:
      type: object
      required:
      - id
      - value
      - unit
      - type 
      - timestamp
      - user_id
      properties:
        id:
          type: string
          format: uuid
          description: Automatically generated key field.
          example: '5cb488279ea138bd6abf936a'
          readOnly: true
        value:
          type: number
          description: Value of height measurement.
          example: 155
        unit:
          type: string
          description: Unit of height measurement in centimeter, according with the International System of Units (SI).
          example: 'cm'
        type: 
          type: string
          description: Type of measurement.
          example: height
        timestamp:
          type: string
          description: Timestamp from anthropometric measurement in UTC format, according to ISO 8601.
          example: '2018-11-19T14:40:00Z'
        user_id:
          type: string
          format: uuid
          description: Id of user associated with the anthropometric measurement.
          example: '5a62be07d6f33400146c9b61'
          readOnly: true
        device_id:
          type: string
          format: uuid
          description: Id of device responsible for capturing the anthropometric measurement.
          example: '5ca790f77aefffa37a17b605'
    WaistCircumference:
      type: object
      required:
      - id
      - value
      - unit
      - type 
      - timestamp
      - user_id
      properties:
        id:
          type: string
          format: uuid
          description: Automatically generated key field.
          example: '5cb488279ea138bd6abf936a'
          readOnly: true
        value:
          type: number
          description: Value of waist circumference measurement.
          example: 70
        unit:
          type: string
          description: Unit of waist circumference in centimeter measurement, according with the International System of Units (SI).
          example: 'cm'
        type: 
          type: string
          description: Type of measurement.
          example: waist_circumference
        timestamp:
          type: string
          description: Timestamp from waist circumference measurement in UTC format, according to ISO 8601.
          example: '2018-11-19T14:40:00Z'
        user_id:
          type: string
          format: uuid
          description: Id of user associated with the waist circumference measurement.
          example: '5a62be07d6f33400146c9b61'
          readOnly: true
        device_id:
          type: string
          format: uuid
          description: Id of device responsible for capturing the anthropometric measurement.
          example: '5ca790f77aefffa37a17b605'
    Weight:
      type: object
      required: 
      - id
      - value
      - unit
      - type 
      - timestamp
      - user_id
      properties:
        id:
          type: string
          format: uuid
          description: Automatically generated key field.
          example: '5cb4882751b5f21ba364ba6f'
          readOnly: true
        value:
          type: number
          description: Value of weight measurement.
          example: 50
        unit:
          type: string
          description: Unit of weight measurement, according with the International System of Units (SI).
          example: 'kg'
        type: 
          type: string
          description: Type of measurement.
          example: weight
        timestamp:
          type: string
          description: Timestamp from weight measurement in UTC format, according to ISO 8601.
          example: '2018-11-19T14:40:00Z'
        user_id:
          type: string
          format: uuid
          description: Id of user associated with the weights measurement.
          example: '5a62be07d6f33400146c9b61'
          readOnly: true
        fat:
          type: object
          description: Body fat measurement, associated with the weight measurement.
          properties:
            value:
              type: number
              example: 30
            unit:
              type: string
              example: '%'
        device_id:
          type: string
          format: uuid
          description: Id of device responsible for capturing the weight measurement.
          example: '5ca790f77aefffa37a17b605'
    Device:
      type: object
      required:
      - id
      - name
      - address
      - type
      - manufacturer
      properties:
        id:
          readOnly: true
          type: string
          format: uuid
          description: Automatically generated key field.
          example: '5ca790f75d2f5766d993103a'
        name: 
          type: string
          description: Device name identification field, according to factory default.
          example: YUNMAI SCALE
        address: 
          type: string
          description: Unique combination of letters and numbers used to identify the device.
          example: 'D4:36:39:91:75:71'
        type: 
          type: string
          description: |
            String representing the type of device, according with internal patterns.
            
            Example of device types:
    
            - THERMOMETER
            - GLUCOMETER
            - BODY_COMPOSITION
            - BLOOD_PRESSURE
            - HEART_RATE
            - SMARTWATCH
            - SMARTBAND
          enum: ['thermometer', 'glucometer', 'body_composition', 'blood_pressure', 'heart_rate', 'smartwatch', 'smartband']
        model_number:
          type: string
          description: Number of device model.
          example: '5028'
        manufacturer:
          type: string
          description: Identification field from device manufacturer.
          example: XIAOMI
    MultiStatus:
      type: object
      description: Default template for message when a request returns multiple status.
      required:
        - success
        - error
      properties:
        success:
          type: array
          description: All items that were processed successfully.
          items:
            type: object
            description: Item data processed.
            properties:
              code:
                type: integer
                description: The requisition status code for the item.
              item:
                type: object
                description: Item data that was successfully processed.
          example:
          - code: 201
            item:
              id: 5cb4882751b5f21ba364ba6f
              value: 50
              unit: kg
              type: weight
              timestamp: '2018-11-19T14:40:00Z'
              user_id: 5a62be07d6f33400146c9b61
              fat:
                value: 30
                unit: "%"
              device_id: 5ca790f77aefffa37a17b605
          - id: 5cb4882751b5f21ba364ba6f
            value: 20
            unit: "%"
            type: fat
            timestamp: '2018-11-17T14:40:00Z'
            user_id: 5a62be07d6f33400146c9b61
            device_id: 5ca790f77aefffa37a17b605
          - code: 201
            item:
              id: 5cb488278cf5f9e6760c14ed
              value: 99
              unit: mg/dl
              meal: preprandial
              type: blood_glucose
              timestamp: '2018-11-19T14:40:00Z'
              user_id: 5a62be07d6f33400146c9b61
              device_id: 5ca790f77aefffa37a17b605
          - code: 201
            item:
              id: 5cb488277b26234cfe2635da
              dataset:
              - value: 90
                timestamp: '2018-11-19T14:40:00Z'
              - value: 87
                timestamp: '2018-11-19T14:41:00Z'
              - value: 89
                timestamp: '2018-11-19T14:42:00Z'
              - value: 90
                timestamp: '2018-11-19T14:43:00Z'
              - value: 91
                timestamp: '2018-11-19T14:44:00Z'
              unit: bpm
              type: heart_rate
              user_id: 5a62be07d6f33400146c9b61
              device_id: 5ca790f77aefffa37a17b605
          - id: 5cb48827217ee2910ea11e84
            systolic: 120
            diastolic: 80
            pulse: 80
            unit: mmHg
            type: blood_pressure
            timestamp: '2018-11-19T14:40:00Z'
            user_id: 5a62be07d6f33400146c9b61
            device_id: 5ca790f77aefffa37a17b605
          - id: 5cb488279ea138bd6abf936a
            value: 150
            unit: cm
            type: height
            timestamp: '2018-11-19T14:40:00Z'
            user_id: 5a62be07d6f33400146c9b61
            device_id: 5ca790f77aefffa37a17b605
          - id: 5cb488279ea138bd6abf936a
            value: 70
            unit: cm
            type: waist_circumference
            timestamp: '2018-11-19T14:40:00Z'
            user_id: 5a62be07d6f33400146c9b61
            device_id: 5ca790f77aefffa37a17b605
          - id: 5cb4b2fd02eb7733b03db810
            value: 36
            unit: "°C"
            type: body_temperature
            timestamp: '2018-11-19T14:40:00Z'
            user_id: 5a62be07d6f33400146c9b61
            device_id: 5ca790f77aefffa37a17b605
 
        error:
          type: array
          description: All items that were were not processed due to some error.
          items:
            type: object
            description: Item data not processed.
            properties:
              code:
                type: integer
                description: The requisition status code for the item.
              message:
                type: string
                description: Readable and short description of the error.
              description:
                type: string
                description: Detailed description of the error.
              item:
                type: object
                description: Item data that was not successfully processed
          example: []

    #####################################################################
    ############## HANIot Analytics Service Schemas #####################
    #####################################################################
   
    NutritionEvaluation:
      type: object
      required:
      - id
      - status
      - created_at
      - patient_id
      - nutritional_status
      - waist_height_relation
      - overweight_indicator
      - heart_rate
      - blood_glucose
      - blood_pressure
      - counseling
      - measurements
      - physical_activity_habits
      - feeding_habits_record  
      - medical_record  
      properties:
        id:
          type: string
          format: uuid
          description: Automatically generated key field.
          example: '5cb4882751b5f21ba364ba6f'
          readOnly: true
        status:
          type: string
          description: Actual status for the evaluation.
          enum: ['complete', 'incomplete']
        created_at:
          readOnly: true
          type: string
          description: Date of medical record register in UTC format, according to ISO 8601.
          example: '2018-11-19T14:40:00'
        patient: 
          $ref: '#/components/schemas/Patient'
        nutritional_status:
          type: object
          description: Nutritonal status from patient.
          properties:
            height:
              type: number
              description: Value of patient height used on bmi calculation.
              example: 150
            weight:
              type: number
              description: Value of patient weight used on bmi calculation.
              example: 50
            bmi:
              type: number
              description: Value of patient body mass index.
              example: 23.4
            percentile:
              type: string
              description: Percentile value, based on pacient bmi and age.
              enum: ['p01', 'p3', 'p85', 'p97', 'p999']
              example: 'p97'
            classification: 
              type: string
              description: Classification of nutritional status of patient, based on the percentile.
              enum: ['accentuated_thinness', 'thinness', 'eutrophy', 'overweight', 'obesity', 'severe_obesity']
              example: 'overweight'
        overweight_indicator:
          type: object
          properties:
            waist_circumference: 
              type: number
              description: Value of waist circumference used on waist-height relation.
              example: 70
            height: 
              type: number
              description: Value of height used on waist-height relation.
              example: 150
            waist_height_relation:
              type: number
              description: Proportion of waist circumference in relation to patient height.
              example: 0.46
            classification:
              type: string
              description: Classification for the overweight indicator, based on waist-height relation.
              enum: ['normal', 'overweight_obesity_risk']
              example: 'normal'
        heart_rate:
          type: object
          properties:
            min:
              type: number
              description: HeartRate bpm min value.
              example: 87
            max:
              type: number
              description: HeartRate bpm max value.
              example: 91
            average:
              type: number
              description: HeartRate bpm average.
              example: 89
            dataset:
              type: array
              description: List of heart rate collection over a period of time.
              items:
                type: object
                properties:
                  value: 
                    type: number
                    description: Value of heart rate measurement.
                  timestamp:
                    type: string
                    description: Timestamp from heart rate measurement in UTC format, according to ISO 8601.
              example:
              - value: 90
                timestamp: '2018-11-19T14:40:00Z'
              - value: 87
                timestamp: '2018-11-19T14:41:00Z'
              - value: 89
                timestamp: '2018-11-19T14:42:00Z'
              - value: 90
                timestamp: '2018-11-19T14:43:00Z'
              - value: 91
                timestamp: '2018-11-19T14:44:00Z'
        blood_glucose:
          type: object
          description: Informations about patient blood glucose.
          properties:
            value:
              type: number
              description: Value of glycemia measurement.
              example: 99
            meal:
              type: string
              description: Period of collection of glycemia.
              enum: [ 'preprandial', 'postprandial', 'fasting', 'casual', 'bedtime' ]
              example: 'prepandial'
            classification:
              type: string
              description: Classification of the blood glucose, according with value and meal.
              enum: ['good', 'great', 'undefined']
              example: 'great'
            zones: 
              type: array
              description: Zone of blood glucose, according to the meal.
              items:
                type: object
              example:
              - prepandial:
                  good:
                    min: 65
                    max: 100
                  great:
                    min: 90
                    max: 145
                postprandial:
                  good:
                    min: 80
                    max: 126
                  great:
                    min: 90
                    max: 180
                bedtime:
                  good:
                    min: 80
                    max: 126
                  great:
                    min: 90
                    max: 180
                glycated_hemoglobin:
                  good:
                    min: 4.5
                    max: 6.5
                  great:
                    min: 5.7
                    max: 7.5
        blood_pressure:
          type: object
          description: Information about patient blood pressure.
          properties:
            systolic:
              type: number
              description: Value of systolic blood pressure.
              example: 94
            diastolic:
              type: number
              description: Value of diastolic blood pressure.
              example: 56
            systolic_percentile:
              type: string
              description: Systolic blood pressure classification.
              enum: ['pas5','pas10', 'pas25','pas50','pas75', 'pas90','pas95']
              example: 'pas5'
            diastolic_percentile:
              type: string
              description: Diastolic blood pressure classification.
              enum: ['pad5','pad10', 'pad25','pad50','pad75', 'pad90','pad95']
              example: 'pad5'
            classification:
              type: string
              description: Classification of blood pressure, according with the blood pressure, systolic percentile and diastolic percentile.
              enum: ['normal', 'pre_hypertension','arterial_hypertension_stage_1','arterial_hypertension_stage_2']
              example: 'normal'
        counseling:
          type: object
          description: Nutritional counseling based on analytic avaliation.
          properties:
            suggested: 
              type: object
              description: Nutritional counseling suggested by application.
              $ref: '#/components/schemas/NutritionalCouncil'
            definitive:
              type: object
              description: Nutritional counseling defined by the health professional.
              $ref: '#/components/schemas/NutritionalCouncil'
        measurements: 
          type: array
          description: A list of all measurements.
          items:
            oneOf:
              - $ref: '#/components/schemas/BloodGlucose'
              - $ref: '#/components/schemas/BloodPressure'
              - $ref: '#/components/schemas/BodyTemperature'
              - $ref: '#/components/schemas/Fat'
              - $ref: '#/components/schemas/HeartRate'
              - $ref: '#/components/schemas/Height'
              - $ref: '#/components/schemas/WaistCircumference'
              - $ref: '#/components/schemas/Weight'
        physical_activity_habits:
          $ref: '#/components/schemas/PhysicalActivityHabits'
        feeding_habits_record:
          $ref: '#/components/schemas/FeedingHabitsRecord'
        medical_record:
          $ref: '#/components/schemas/MedicalRecord'
    NutritionalCouncil:
      type: object
      description: Nutrition counseling for the patient.
      properties:
        bmi_whr:
          type: array
          description: Counselings based on patient BMI and Waist-Height relation from patient.
          items:
            type: string
          example:
            - 'Eat more vegetables.'
        glycemia:
          type: array
          description: Counselings based on patient glycemia.
          items:
            type: string
          example:
           - 'Reduce the sugar consume.'
        blood_pressure:
          type: array
          description: Counselings based on patient blood pressure.
          items:
            type: string
          example:
            - 'Reduce the salt consume.'
            
    OdontologicEvaluation:
      type: object
      description: Odontologic evaluation from the patient.
      required:
        - id
        - total_patients
        - file_csv
        - file_xls
        - health_professional_id
        - created_at
      properties:
        id:
          type: string
          format: uuid
          description: Automatically generated key field.
          example: '5cb4882751b5f21ba364ba6f'
          readOnly: true
        total_patients:
          type: number
          description: Total number of patients who participated in odontologic evaluation.
          example: 1
        file_csv:
          type: string
          format: uri
          description: Path for download the odontologic evaluation as .csv file.
          example: https://repo.com/file.csv
        file_xls: 
          type: string
          format: uri
          description: Link for download the odontologic evaluation as .xls file.
          example: https://repo.com/file.xls
        health_professional_id: 
          type: string
          format: uuid
          description: Id of health professional associated with the odontologic evaluation.
          example: '5c86d00cfc25e7036d51d652'
        created_at:
          readOnly: true
          type: string
          description: Date of medical record register in UTC format, according to ISO 8601.
          example: '2018-11-19T14:40:00'
        
      
    #####################################################################
    ####################### Error Schema ################################
    #####################################################################
    
    Error:
      type: object
      description: >-
        Default template for error message. All returned errors will follow this
        template.
      required:
        - code
        - message
      properties:
        code:
          type: integer
          description: >-
            Unique API code that indicates specific details of the error, or
            the actual status code of the response when the unique code is not
            appropriate.
        message:
          type: string
          description: Readable and short description of the error.
        description:
          type: string
          description: Detailed description of the error.
        redirect_link:
          type: string
          
  ####################
  # Common parameters
  ####################
  parameters:
    fieldsParam:
      in: query
      name: fields
      required: false
      description: >-
        Allows you to retrieve only the information you want. To do this, 
        simply provide the name of the attributes separated by commas. 
        For example: **_fields=field1,field2_** indicates that only 
        field1 and field2 should be listed in the query result.
      schema:
        type: array
        items:
          type: string
    pageParam:
      in: query
      name: page
      required: false
      description: The page number.
      schema:
        type: integer
        format: int32
        minimum: 1
        default: 1
    limitParam:
      in: query
      name: limit
      required: false
      description: The number of items to return.
      schema:
        type: integer
        format: int32
        maximum: 100
        default: 20
    sortParam:
      in: query
      name: sort
      required: false
      description: >-
        Contains the names of the attributes, separated by commas, that
        will be used to sort the result of the query. For ascending sort,
        use the '+' character before the attribute name. For descending 
        sort, use the '-' character before the attribute name. By default,
        the order is ascending, so the '+' symbol is optional, just enter
        the attribute.
      schema:
        type: array
        items:
          type: string
        default:
          - created_at
    filterParam:
      in: query
      name: ''
      required: false
      description: >-
        To filter a collection by multiple concurrent attributes or filter 
        multiple values for an attribute, simply use the attribute/property
        name with an equal sign and the expected values, separated by a comma.
        **_property=value1,value2,value3_**. The query is not case sensitive.
        Example: **_?name=elvis,john_** to retrieve exactly the same users with 
        elvis or john name.
        For filtering with logical operators, just follow the syntax:
        **_property=operator:value_**. The available operators are:
         - **gt** -> Defines which value of the attribute is greater than 
                    (that is,>) the specified value.
         - **gte** -> Defines which attribute value is greater than or equal to
                    (that is,>=) the specified value.
         - **lt** -> Define the value of the attribute to be less than (that is, <)
                    the specified value.
         - **lte** -> Defines which value of the attribute is less than or equal to 
                    (that is, <=) the specified value.

        Example: **_?field1=gte:80&age=lt:100_** to recover the users with age 
        is greater than or equal to 80 and less then 100.
      schema:
        type: string
    dateStartParam:
      in: query
      name: date_start
      required: false
      description: >-
        Define start date in format: YYYY-MM-DD ou YYYY-MM-DD hh:mm:ss. The
        attribute used for the query will be the registration_date.
      schema:
        type: string
    dateEndParam:
      in: query
      name: date_end
      required: false
      description: >-
        Define end date in format: YYYY-MM-DD ou YYYY-MM-DD hh:mm:ss.The
        attribute used for the query will be the registration_date. 
      schema:
        type: string
        default: today
    periodParam:
      in: query
      name: period
      required: false
      description: |-
        Sets the period from the available ones:
         - **[1..n]d** - Total days (1d, 2d, ...)
         - **[1..n]w** - Total of weeks (1w, 2w, ...)
         - **[1..n]m** - Total of months (1m, 2m, ...)
         - **[1..n]y** - Total of years (1y, 2y, ...)
        The attribute used for the query will be the registration_date.
      schema:
        type: string

  #######################
  # Common request bodies
  #######################
  requestBodies: {}
  
  ####################
  # Common responses
  ####################
  responses:
    '204':
      description: >- 
        Operation performed successfully. There is no data to be returned
    '400':
          description: >-
            Request can not be met, syntactically incorrect or violates the
            schema. Normally it occurs due to validation issues, such as fields
            that are expected in the request body and not passed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    '401':
      description: Authentication failed due to invalid authentication credentials.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '403':
          description: User does not have scope to access this resource.
          content:
            application/json:
              schema:
                $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/schemas/Error'
    '404':
      description: >-
        Specified resource does not exist. Usually when the URI is incorrect
        or the resource is not found, or even no longer exists.
      content:
        application/json:
          schema:
            $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/schemas/Error'
    '406':
      description: >-
        The server is not implementing the media type requested by the
        client for the application response. Only application/json is
        currently accepted.
      content:
        application/json:
          schema:
            $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/schemas/Error'
    '409':
      description: ->
        Conflicts have probably occurred with data that can not be duplicated.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '415':
      description: >-
        The server does not support the requested payload format. Only 
        application/json is accepted.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '429':
      description: The rate limit for requests exceeded.
      content:
        application/json:
          schema:
            $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/schemas/Error'
    '500':
      description: >-
        An internal server error occurred. Although the client appears to
        provide a correct request, the server encountered an unexpected
        condition that prevented it from responding to the request.
      content:
        application/json:
          schema:
            $ref: 'https://api.swaggerhub.com/domains/haniot/haniot-components/1.0.0#/components/schemas/Error'
            
  #########################
  # Common headers
  # (except request headers - they are defined as parameters)
  #########################
  headers: {}

  #######################
  # Common path items
  #######################
  pathitems: {}

  ######################################
  # Common examples of input/output data
  ######################################
  examples:
  
    #####################################################################
    ############## HANIot Account Service Examples ######################
    #####################################################################
  
    Admin:
      value:
        id: 5c86d00c7a8618923481b48b
        email: admin@haniot.com
    HealthProfessional:
      value:
        id: 5c86d00cfc25e7036d51d652
        name: Isabelle Cordeiro
        email: isa@haniot.com
        health_area: nutrition
        PilotStudy:
          value:
            id: 5c86d00c2239a48ea20a0134
            name: Pilot Odonto 01
            is_active: true
            start: '2018-11-19T14:40:00'
            end: '2019-01-23T18:00:00'
            health_professionals_id:
              - 5c86d00cfc25e7036d51d652
    PilotStudy:
      value:
        id: 5c86d00c2239a48ea20a0134
        name: Pilot Odonto 01
        is_active: true
        start: '2018-11-19T14:40:00'
        end: '2019-01-23T18:00:00'
        health_professionals_id:
          - 5c86d00cfc25e7036d51d652
    Patient:
      value:
        id: '5c9137f2b8d3921ff3028378'
        name: 'Elvis Aaron'
        email: elvis@mail.com
        gender: 'male'
        birth_date: '1935-01-08'
        pilotstudy_id: '5c86d00c2239a48ea20a0134'
    
    #####################################################################
    ################ HANIot EHR Service Examples ########################
    #####################################################################
    
    SleepHabit: 
      value:
        id: 5c9137f2f6d3dba533e4cb36
        created_at: '2018-11-19T14:40:00'
        week_day_sleep: 22
        week_day_wake_up: 22
    PhysicalActivityHabits:
      value:
        id: 5c9137f2cdff19618c05cf31
        created_at: '2018-11-19T14:40:00'
        school_activity_freq: four_more_per_week
        weekly_activities:
        - run
        - swim
    FeedingHabitsRecord:
      value: 
        id: 5c9137f233b9b49d1c881189
        created_at: '2018-11-19T14:40:00'
        weekly_feeding_habits:
        - food: bread
          seven_days_freq: all_days
        daily_water_glasses: five_more
        six_month_breast_feeding: complementary
        food_allergy_intolerance:
        - gluten
        - other
        breakfast_daily_frequency: everyday
    MedicalRecord:
      value:
        id: 5c9137f29293b51a067711c8
        created_at: '2018-11-19T14:40:00'
        chronic_diseases:
        - type: hypertension
          disease_history: 'yes'
    SociodemographicRecord:
      value:
        id: 5cbddb07bd6cdd88c4735d99
        created_at: '2018-11-19T14:40:00'
        color_race: white
        mother_scholarity: unlettered
        people_in_home: 4
    FamilyCohesionRecord:
      value: 
        family_mutual_aid_freq: almost_never
        friendship_approval_freq: almost_never
        family_only_task_freq: almost_never
        family_only_preference_freq: almost_never
        free_time_together_freq: almost_never
        family_proximity_perception_freq: almost_never
        all_family_tasks_freq: almost_never
        family_tasks_opportunity_freq: almost_never
        family_decision_support_freq: almost_never
        family_union_relevance_freq: almost_never
        family_cohesion_result: 45
    OralHealthRecord:
      value:
        id: 5cbddb07bd6cdd88c4735d99
        created_at: '2018-11-19T14:40:00'
        teeth_brushing_freq: none
        teeth_lesions:
        - tooth_type: deciduous_tooth
          lesion_type: white_spot_lesion
        - tooth_type: deciduous_tooth
          lesion_type: cavitated_lesion
    
    #####################################################################
    ############### HANIot M-Health Service Schemas #####################
    #####################################################################
        
    BloodGlucose:
      value:
        id: 5cb488278cf5f9e6760c14ed
        value: 99
        unit: mg/dl
        meal: preprandial
        type: blood_glucose
        timestamp: '2018-11-19T14:40:00Z'
        user_id: 5a62be07d6f33400146c9b61
        device_id: 5ca790f77aefffa37a17b605
    BloodPressure:
      value:
        id: 5cb48827217ee2910ea11e84
        systolic: 120
        diastolic: 80
        pulse: 80
        unit: mmHg
        type: blood_pressure
        timestamp: '2018-11-19T14:40:00Z'
        user_id: 5a62be07d6f33400146c9b61
        device_id: 5ca790f77aefffa37a17b605
    BodyTemperature:
      value:
        id: 5cb4b2fd02eb7733b03db810
        value: 36
        unit: °C
        type: body_temperature
        timestamp: '2018-11-19T14:40:00Z'
        user_id: 5a62be07d6f33400146c9b61
        device_id: 5ca790f77aefffa37a17b605
    Fat:
      value:
        id: 5cb4882751b5f21ba364ba6f
        value: 20
        unit: '%'
        type: 'fat'
        timestamp: '2018-11-17T14:40:00Z'
        user_id: 5a62be07d6f33400146c9b61
        device_id: 5ca790f77aefffa37a17b605
    HeartRate:
      value:
        id: 5cb488277b26234cfe2635da
        dataset:
          - value: 90
            timestamp: '2018-11-19T14:40:00Z'
          - value: 87
            timestamp: '2018-11-19T14:41:00Z'
          - value: 89
            timestamp: '2018-11-19T14:42:00Z'
          - value: 90
            timestamp: '2018-11-19T14:43:00Z'
          - value: 91
            timestamp: '2018-11-19T14:44:00Z'
        unit: bpm
        type: heart_rate
        user_id: 5a62be07d6f33400146c9b61
        device_id: 5ca790f77aefffa37a17b605
    Height:
      value:
        id: 5cb488279ea138bd6abf936a
        value: 150
        unit: cm
        type: height
        timestamp: '2018-11-19T14:40:00Z'
        user_id: 5a62be07d6f33400146c9b61
        device_id: 5ca790f77aefffa37a17b605
    WaistCircumference:
      value:  
        id: 5cb488279ea138bd6abf936a
        value: 70
        unit: cm
        type: waist_circumference
        timestamp: '2018-11-19T14:40:00Z'
        user_id: 5a62be07d6f33400146c9b61
        device_id: 5ca790f77aefffa37a17b605
    Weight:
      value:
        id: 5cb4882751b5f21ba364ba6f
        value: 50
        unit: kg
        type: weight
        timestamp: '2018-11-19T14:40:00Z'
        user_id: 5a62be07d6f33400146c9b61
        fat:
          value: 30
          unit: '%'
        device_id: 5ca790f77aefffa37a17b605
    MultiStatus:
      value:
        success:
          - code: 201
            item:
              $ref: '#/components/examples/BloodGlucose/value'
          - code: 201
            item: 
              $ref: '#/components/examples/BloodPressure/value'
          - code: 201
            item:
               $ref: '#/components/examples/BodyTemperature/value'
          - code: 201
            item:
              $ref: '#/components/examples/Fat/value'
          - code: 201
            item:
              $ref: '#/components/examples/HeartRate/value'
          - code: 201
            item: 
              $ref: '#/components/examples/Height/value'
          - code: 201
            item:
              $ref: '#/components/examples/WaistCircumference/value'
          - code: 201
            item: 
              $ref: '#/components/examples/Weight/value'
        error: []

    #####################################################################
    ############# HANIot Analytics Service Examples #####################
    #####################################################################
    
    NutritionEvaluation:
      value:
        id: 5cb4882751b5f21ba364ba6f
        status: complete
        created_at: '2018-11-19T14:40:00'
        patient_id: 5a62be07d6f33400146c9b61
        nutritional_status:
          height: 150
          weight: 50
          bmi: 23.4
          percentile: p97
          classification: overweight
        overweight_indicator:
          waist_circumference: 70
          height: 150
          waist_height_relation: 0.46
          classification: normal
        heart_rate:
          min: 87
          max: 91
          average: 89
          dataset:
            - value: 90
              timestamp: '2018-11-19T14:40:00Z'
            - value: 87
              timestamp: '2018-11-19T14:41:00Z'
            - value: 89
              timestamp: '2018-11-19T14:42:00Z'
            - value: 90
              timestamp: '2018-11-19T14:43:00Z'
            - value: 91
              timestamp: '2018-11-19T14:44:00Z'
        blood_glucose:
          value: 99
          meal: prepandial
          classification: great
          zones:
            - prepandial:
                good:
                  min: 65
                  max: 100
                great:
                  min: 90
                  max: 145
              postprandial:
                good:
                  min: 80
                  max: 126
                great:
                  min: 90
                  max: 180
              bedtime:
                good:
                  min: 80
                  max: 126
                great:
                  min: 90
                  max: 180
              glycated_hemoglobin:
                good:
                  min: 4.5
                  max: 6.5
                great:
                  min: 5.7
                  max: 7.5
        blood_pressure:
          systolic: 94
          diastolic: 56
          systolic_percentile: pas5
          diastolic_percentile: pad5
          classification: normal
        counseling:
          suggested:
            bmi_whr:
              - Eat more vegetables.
            glycemia:
              - Reduce the sugar consume.
            blood_pressure:
              - Reduce the salt consume.
          definitive:
            bmi_whr:
              - Eat more vegetables.
            glycemia:
              - Reduce the sugar consume.
            blood_pressure:
              - Reduce the salt consume.
        measurements:
          - id: 5cb488278cf5f9e6760c14ed
            value: 99
            unit: mg/dl
            meal: preprandial
            type: blood_glucose
            timestamp: '2018-11-19T14:40:00Z'
            user_id: 5a62be07d6f33400146c9b61
            device_id: 5ca790f77aefffa37a17b605
          - id: 5cb48827217ee2910ea11e84
            systolic: 120
            diastolic: 80
            pulse: 80
            unit: mmHg
            type: blood_pressure
            timestamp: '2018-11-19T14:40:00Z'
            user_id: 5a62be07d6f33400146c9b61
            device_id: 5ca790f77aefffa37a17b605
          - id: 5cb4b2fd02eb7733b03db810
            value: 36
            unit: °C
            type: body_temperature
            timestamp: '2018-11-19T14:40:00Z'
            user_id: 5a62be07d6f33400146c9b61
            device_id: 5ca790f77aefffa37a17b605
          - id: 5cb4882751b5f21ba364ba6f
            value: 20
            unit: '%'
            type: fat
            timestamp: '2018-11-17T14:40:00Z'
            user_id: 5a62be07d6f33400146c9b61
            device_id: 5ca790f77aefffa37a17b605
          - id: 5cb488277b26234cfe2635da
            dataset:
              - value: 90
                timestamp: '2018-11-19T14:40:00Z'
              - value: 87
                timestamp: '2018-11-19T14:41:00Z'
              - value: 89
                timestamp: '2018-11-19T14:42:00Z'
              - value: 90
                timestamp: '2018-11-19T14:43:00Z'
              - value: 91
                timestamp: '2018-11-19T14:44:00Z'
            unit: bpm
            type: heart_rate
            user_id: 5a62be07d6f33400146c9b61
            device_id: 5ca790f77aefffa37a17b605
          - id: 5cb488279ea138bd6abf936a
            value: 150
            unit: cm
            type: height
            timestamp: '2018-11-19T14:40:00Z'
            user_id: 5a62be07d6f33400146c9b61
            device_id: 5ca790f77aefffa37a17b605
          - id: 5cb488279ea138bd6abf936a
            value: 70
            unit: cm
            type: waist_circumference
            timestamp: '2018-11-19T14:40:00Z'
            user_id: 5a62be07d6f33400146c9b61
            device_id: 5ca790f77aefffa37a17b605
          - id: 5cb4882751b5f21ba364ba6f
            value: 50
            unit: kg
            type: weight
            timestamp: '2018-11-19T14:40:00Z'
            user_id: 5a62be07d6f33400146c9b61
            fat:
              value: 30
              unit: '%'
            device_id: 5ca790f77aefffa37a17b605
        physical_activity_habits:
          id: 5c9137f2cdff19618c05cf31
          created_at: '2018-11-19T14:40:00'
          school_activity_freq: four_more_per_week
          weekly_activities:
            - run
            - swim
        feeding_habits_record:
          id: 5c9137f233b9b49d1c881189
          created_at: '2018-11-19T14:40:00'
          weekly_feeding_habits:
            - food: bread
              seven_days_freq: all_days
          daily_water_glasses: five_more
          six_month_breast_feeding: complementary
          food_allergy_intolerance:
            - gluten
            - other
          breakfast_daily_frequency: everyday
        medical_record:
          id: 5c9137f29293b51a067711c8
          created_at: '2018-11-19T14:40:00'
          chronic_diseases:
            - type: hypertension
              disease_history: 'yes'
        
  #########################
  # Common link definitions
  # See: https://swagger.io/docs/specification/links/
  #########################
  links: {}

  #########################
  # Common callback definitions
  # See: https://swagger.io/docs/specification/callbacks/
  #########################
  callbacks: {}